{"version":3,"sources":["ListItem.tsx","GitRepoStarsList.tsx","App.tsx","index.tsx"],"names":["ListItem","props","react_default","a","createElement","className","href","url","target","rel","path","description","date","created","moment","format","stars","GitRepoStarsList","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","since","state","data","Date","setMonth","getMonth","callApi","debounce","inherits","createClass","key","value","nextProps","_this2","params","order","per_page","q","concat","toISOString","split","language","sort","fetch","queryString","stringify","encode","then","response","json","Array","isArray","items","map","record","created_at","full_name","stargazers_count","html_url","setState","react","item","index","ListItem_ListItem","assign","React","App","languageChanged","bind","assertThisInitialized","e","type","onChange","GitRepoStarsList_GitRepoStarsList","PureComponent","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7fad22d0.chunk.js","sourcesContent":["import moment from 'moment';\r\nimport React from 'react';\r\nimport './ListItem.css';\r\n\r\nexport interface Props {\r\n  created: Date;\r\n  description: string;\r\n  path: string;\r\n  stars: number;\r\n  url: string;\r\n}\r\n\r\nfunction formatDate(date: Date): string {\r\n    return moment(date).format('MMMM Do YYYY');\r\n}\r\n\r\nexport const ListItem: React.FC<Props> = props => {\r\n  return (\r\n    <li className='list-item'>\r\n      <a className='list-item__link' href={props.url} target='_blank' rel='noopener noreferrer'>{props.path}</a>\r\n      <div className='list-item__description'>{props.description}</div>\r\n      <div className='list-item__meta'>\r\n        <div className='list-item__date'>Created: {formatDate(props.created)}</div>\r\n        <div className='list-item__stars'>{props.stars}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","import { debounce } from 'debounce';\r\nimport moment from 'moment';\r\nimport queryString from 'query-string';\r\nimport * as React from 'react';\r\nimport 'ts-polyfill/lib/es2015-core';\r\nimport 'ts-polyfill/lib/es2015-promise';\r\nimport 'ts-polyfill/lib/es2016-array-include';\r\nimport 'whatwg-fetch';\r\nimport './GitRepoStarsList.css';\r\nimport { ListItem, Props as ListItemProps } from './ListItem';\r\n\r\ninterface Props {\r\n  language: string;\r\n}\r\n\r\ninterface State {\r\n  data: ListItemProps[];\r\n}\r\n\r\ninterface GitHubSearchResponse {\r\n  items: RepositoryRecord[];\r\n}\r\n\r\ninterface RepositoryRecord {\r\n  created_at: string;\r\n  description: string;\r\n  full_name: string;\r\n  html_url: string;\r\n  stargazers_count: number;\r\n}\r\n\r\nfunction formatDate(date: Date): string {\r\n  return moment(date).format('Do MMMM YYYY');\r\n}\r\n\r\nexport class GitRepoStarsList extends React.Component<Props, State> {\r\n\r\n  private since: Date;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n    };\r\n\r\n    this.since = new Date();\r\n    this.since.setMonth(this.since.getMonth() - 1);\r\n\r\n    this.callApi = debounce(this.callApi, 250);\r\n    this.callApi(props);\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: Props) {\r\n    this.callApi(nextProps);\r\n  }\r\n\r\n  private callApi(props: Props) {\r\n    const params = {\r\n      order: 'desc',\r\n      per_page: 3,\r\n      q: `created:>=${this.since.toISOString().split('T')[0]}+language:${props.language}`,\r\n      sort: 'stars',\r\n    };\r\n\r\n    fetch(`https://api.github.com/search/repositories?${queryString.stringify(params, {encode: false})}`)\r\n      .then(response => response.json())\r\n      .then((response: GitHubSearchResponse) => {\r\n        let data: ListItemProps[] = [];\r\n        if (Array.isArray(response.items)) {\r\n            data = response.items.map(record => ({\r\n            created: new Date(record.created_at),\r\n            description: record.description,\r\n            path: record.full_name,\r\n            stars: record.stargazers_count,\r\n            url: record.html_url,\r\n          }));\r\n        }\r\n\r\n        this.setState({\r\n          data,\r\n        });\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n        <div className='git-repo-stars-list'>\r\n          <div className='git-repo-stars-list__head'>Most stars{\r\n            this.props.language &&\r\n              `: \"${this.props.language}\"`\r\n          }</div>\r\n          <div className='git-repo-stars-list__sub-head'>Repos created since {formatDate(this.since)}</div>\r\n          <ul className='git-repo-stars-list__list'>\r\n            {this.state.data.map((item, index) => <ListItem key={index} {...item}/>)}\r\n          </ul>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { GitRepoStarsList } from './GitRepoStarsList';\n\ninterface State {\n  language: string;\n}\n\nclass App extends React.PureComponent<{}, State> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      language: 'javascript',\n    };\n\n    this.languageChanged = this.languageChanged.bind(this);\n  }\n\n  private languageChanged(e: React.ChangeEvent<HTMLInputElement>) {\n    const value = e.target.value;\n\n    this.setState({\n      language: value,\n    });\n  }\n\n  public render() {\n    const {\n      language,\n    } = this.state;\n\n    return (\n      <div className='app'>\n        <div className='app__test-form'>\n          <label>\n            Language:\n            <input\n              type='language'\n              value={language}\n              onChange={this.languageChanged}\n            />\n          </label>\n        </div>\n        <GitRepoStarsList language={language} />\n      </div>);\n  }\n}\n\nexport default App;\n","import 'normalize.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}